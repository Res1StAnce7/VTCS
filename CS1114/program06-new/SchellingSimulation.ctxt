#BlueJ class context
comment0.target=SchellingSimulation
comment0.text=\r\n\ \ It\ represents\ an\ image\ that\ will\ model\ the\ neighborhood,\ \r\n\ \ with\ each\ pixel\ representing\ a\ location\ \r\n\ \ that\ is\ either\ occupied\ or\ empty\r\n\ \ \r\n\ \ @author\ Siliang\ Zhang\ (906467527)\r\n\ \ @version\ 2021.10.02\r\n
comment1.params=width\ height
comment1.target=SchellingSimulation(int,\ int)
comment1.text=\r\n\ Initializes\ a\ newly\ created\ SchellingSimulation\ object.\r\n\ @param\ width\ the\ width\ of\ the\ image\r\n\ @param\ height\ the\ height\ of\ the\ image\r\n
comment10.params=pix
comment10.target=boolean\ maybeRelocate(student.media.Pixel)
comment10.text=\r\n\ Takes\ one\ Pixel\ object\ as\ a\ parameter\ and\ returns\ a\ boolean\ result.\ \r\n\ This\ method\ tries\ to\ move\ the\ corresponding\ \r\n\ agent\ to\ a\ new\ pixel\ location.\r\n\ @param\ pix\ a\ Pixel\ object\r\n\ @return\ the\ result\ of\ if\ the\ pixel\ can\ be\ relocated\r\n
comment11.params=
comment11.target=int\ cycleAgents()
comment11.text=\r\n\ Takes\ no\ parameters\ and\ returns\ an\ integer\ result.\ \r\n\ This\ method\ uses\ a\ loop\ over\ all\ pixels,\ \r\n\ checking\ each\ pixel\ in\ turn.\r\n\ f\ the\ pixel\ is\ empty,\ leave\ it\ alone.\ \r\n\ If\ it\ is\ occupied,\ check\ to\ see\ if\ the\ agent\ there\ is\ satisfied\r\n\ if\ so,\ leave\ the\ agent\ alone.\ \r\n\ Otherwise,\ attempt\ to\ relocate\ it\ to\ a\ new\ position\r\n\ @return\ the\ total\ number\ of\ successful\ moves\ \r\n\ after\ processing\ all\ pixels\r\n
comment12.params=pix\ value\ num
comment12.target=double\ isSatisfiedHelperOne(student.media.Pixel,\ java.awt.Color,\ double)
comment12.text=\r\n\ The\ helper\ method\ of\ isSatisfied\ which\ takes\ a\ \r\n\ Pixel\ object,\ a\ color\ value\ and\ a\ double\r\n\ which\ is\ designed\ to\ identify\ blue\ agents\r\n\ @param\ pix\ the\ Pixel\ object\r\n\ @param\ value\ the\ color\ of\ the\ pixel\r\n\ @param\ num\ the\ total\ number\ of\ the\ same\ color\r\n\ @return\ the\ num\ of\ the\ same\ color\r\n
comment13.params=pix\ value\ num
comment13.target=double\ isSatisfiedHelperTwo(student.media.Pixel,\ java.awt.Color,\ double)
comment13.text=\r\n\ The\ helper\ method\ of\ isSatisfied\ which\ takes\ a\ \r\n\ Pixel\ object,\ a\ color\ value\ and\ a\ double\r\n\ which\ is\ designed\ to\ identify\ orange\ agents\r\n\ @param\ pix\ the\ Pixel\ object\r\n\ @param\ value\ the\ color\ of\ the\ pixel\r\n\ @param\ num\ the\ total\ number\ of\ the\ different\ color\r\n\ @return\ the\ num\ of\ the\ different\ color\r\n
comment14.params=pix1\ pix2
comment14.target=boolean\ areNeighbors(student.media.Pixel,\ student.media.Pixel)
comment14.text=\r\n\ Take\ two\ Pixel\ objects\ and\ determine\ \r\n\ the\ relative\ location\ of\ two\ pixels\r\n\ @param\ pix1\ a\ pixel\ object\r\n\ @param\ pix2\ a\ pixel\ object\r\n\ @return\ if\ two\ pixles\ are\ neighbours\ return\ true\r\n
comment15.params=num
comment15.target=boolean\ isFraction(double)
comment15.text=\r\n\ Takes\ a\ double\ and\ check\ if\ it's\ fraction\r\n\ @param\ num\ the\ fraction\ to\ check\r\n\ @return\ if\ the\ param\ is\ double,\ it\ will\ return\ true\r\n\ Otherwise,\ it\ will\ return\ false\r\n
comment16.params=num1\ num2
comment16.target=boolean\ isTensPlace(double,\ double)
comment16.text=\r\n\ Takes\ two\ numbers\ and\ check\ if\ they\ belong\ to\ ten's\ place\r\n\ @param\ num1\ the\ first\ number\ to\ check\r\n\ @param\ num2\ the\ second\ number\ to\ check\r\n\ @return\ if\ the\ param\ is,\ it\ will\ return\ true\r\n\ Otherwise,\ it\ will\ return\ false\r\n
comment17.params=num\ value
comment17.target=boolean\ isBelowRedLine(int,\ java.awt.Color)
comment17.text=\r\n\ Takes\ an\ integer\ and\ a\ color\ check\ if\ it\ needs\ to\ be\r\n\ set\ under\ the\ redline\r\n\ @param\ num\ the\ y-coordinate\r\n\ @param\ value\ the\ color\ of\ the\ pixel\r\n\ @return\ if\ it\ passes\ the\ test,\ returns\ true\r\n
comment18.params=pix\ num1\ num2
comment18.target=boolean\ isThePixel(student.media.Pixel,\ int,\ int)
comment18.text=\r\n\ Takes\ one\ pixel\ and\ two\ integers\r\n\ check\ if\ the\ x\ and\ y\ value\ are\ equal\ to\ the\ coordinate\ \r\n\ of\ the\ pixel\r\n\ @param\ pix\ the\ first\ pixel\r\n\ @param\ num1\ x\ coordinate\r\n\ @param\ num2\ y\ coordinate\r\n\ @return\ if\ they\ are\ the\ same,\ return\ true\r\n
comment19.params=num1\ num2
comment19.target=void\ relocateHelper(int,\ int)
comment19.text=\r\n\ Store\ the\ coordinates\ of\ the\ pixel\ to\ be\ relocate\ to\ ensure\r\n\ isSatisfied\ will\ not\ take\ this\ pixel\ into\ consideration\r\n\ @param\ num1\ x\ coordinate\r\n\ @param\ num2\ y\ coordinate\r\n
comment2.params=
comment2.target=double\ getSatisfactionThreshold()
comment2.text=\r\n\ A\ getter\ method\ that\ returns\ the\ satisfaction\ threshold\ \r\n\ @return\ the\ value\ of\ satisfactionThreshold\r\n
comment3.params=temp
comment3.target=void\ setSatisfactionThreshold(double)
comment3.text=\r\n\ A\ setter\ method\ that\ takes\ a\ double\ parameter\ and\ \r\n\ changes\ the\ satisfaction\ threshold\ to\ the\ specified\ value\r\n\ @param\ temp\ the\ value\ of\ the\ satisfaction\ threshold\r\n
comment4.params=
comment4.target=int\ getRedLine()
comment4.text=\r\n\ \ \ \ \ A\ getter\ method\ that\ returns\ the\ redline\ value\ \ \ \ \ \r\n\ \ \ \ \ @return\ the\ value\ of\ this.redLine\r\n
comment5.params=temp
comment5.target=void\ setRedLine(int)
comment5.text=\r\n\ A\ setter\ method\ that\ takes\ an\ integer\ parameter\ and\ \r\n\ changes\ the\ redline\ to\ the\ specified\ value.\r\n\ @param\ temp\ the\ value\ of\ redLine\r\n
comment6.params=blue\ orange
comment6.target=void\ populate(double,\ double)
comment6.text=\r\n\ This\ method\ will\ "paint"\ the\ image\ \r\n\ with\ a\ randomized\ collection\ of\ blue\ and\ orange\ pixels.\r\n\ @param\ blue\ the\ percentage\ of\ blue\ pixels\r\n\ @param\ orange\ the\ percentage\ of\ orange\ pixels\r\n
comment7.params=pix1\ pix2
comment7.target=boolean\ areSameColor(student.media.Pixel,\ student.media.Pixel)
comment7.text=\r\n\ Takes\ two\ Pixel\ objects\ and\ returns\ a\ boolean\ value\ \r\n\ indicating\ whether\ the\ two\ pixels\ have\ the\ same\ color.\r\n\ @param\ pix1\ an\ Pixel\ object\ to\ be\ compared\r\n\ @param\ pix2\ another\ Pixel\ object\ to\ be\ compared\r\n\ @return\ the\ result\ of\ if\ two\ pixels\ have\ the\ same\ color\r\n
comment8.params=pix
comment8.target=boolean\ isEmpty(student.media.Pixel)
comment8.text=\r\n\ Takes\ one\ Pixel\ object\ and\ returns\ true\ \r\n\ if\ its\ color\ is\ Color.WHITE,\ representing\ an\ empty\ location.\r\n\ @param\ pix\ a\ Pixel\ object\r\n\ @return\ the\ result\ of\ if\ the\ location\ is\ empty\r\n
comment9.params=pix\ value
comment9.target=boolean\ isSatisfied(student.media.Pixel,\ java.awt.Color)
comment9.text=\r\n\ Takes\ one\ Pixel\ object\ and\ a\ Color\ value,\ \r\n\ and\ returns\ a\ boolean\ result\ indicating\ \r\n\ whether\ an\ agent\ of\ the\ specified\ Color\ \r\n\ would\ be\ satisfied\ at\ the\ given\ Pixel\ location.\r\n\ @param\ pix\ a\ Pixel\ object\r\n\ @param\ value\ the\ color\ of\ the\ pixel\r\n\ @return\ the\ result\ of\ if\ the\ color\ is\ satisfied\r\n
numComments=20
