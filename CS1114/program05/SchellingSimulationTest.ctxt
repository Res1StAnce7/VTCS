#BlueJ class context
comment0.target=SchellingSimulationTest
comment0.text=\r\n\ \ The\ test\ class\ of\ SchellingSimulation\r\n\ \ which\ will\ test\ all\ the\ method\ (conditions)\ of\ it\r\n\ \ @author\ Siliang\ Zhang\ (906467527)\r\n\ \ @version\ 2021.10.03\r\n
comment1.params=
comment1.target=SchellingSimulationTest()
comment1.text=\r\n\ Creates\ a\ new\ SchellingSimulationTest\ test\ object.\r\n
comment10.params=
comment10.target=void\ testIsSatisfied()
comment10.text=\r\n\ Test\ if\ an\ agent\ of\ the\ specified\ Color\ \r\n\ would\ be\ satisfied\ at\ the\ given\ Pixel\ location\r\n
comment11.params=
comment11.target=void\ testMaybeRelocate()
comment11.text=\r\n\ Test\ all\ three\ conditions\ (when\ relocate\ a\ blue\ agent,\ \r\n\ a\ orange\ agent\ and\ when\ they\ cannot\ be\ moved)\r\n
comment12.params=
comment12.target=void\ testCycleAgents()
comment12.text=\r\n\ A\ blue\ agent\ will\ at\ (0,\ 0)\ will\ be\ surrounded\ by\ three\ \r\n\ orange\ agents,\ it\ should\ relocate\ once\r\n
comment13.params=
comment13.target=void\ testIsSatisfiedHelperOne()
comment13.text=\r\n\ Test\ if\ the\ helper\ method\ is\ working\ as\ expectation\r\n
comment14.params=
comment14.target=void\ testIsSatisfiedHelperTwo()
comment14.text=\r\n\ Test\ if\ the\ helper\ method\ is\ working\ as\ expected\r\n
comment15.params=
comment15.target=void\ testRelativeLocation()
comment15.text=\r\n\ Test\ if\ the\ method\ will\ return\ the\ code\ of\ relative\r\n\ location\ of\ two\ pixels\ as\ expexted\r\n
comment16.params=
comment16.target=void\ testIsFraction()
comment16.text=\r\n\ Test\ if\ the\ given\ number\ is\ a\ fraction\r\n
comment17.params=
comment17.target=void\ testIsTensPlace()
comment17.text=\r\n\ Test\ if\ the\ given\ number\ belongs\ to\ ten's\ place\r\n
comment18.params=
comment18.target=void\ setAllToWhite()
comment18.text=\r\n\ Sets\ all\ the\ pixels\ to\ white\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ testGetSatisfactionThreshold()
comment3.text=\r\n\ test\ if\ the\ satisification\ threshold\ value\ returned\r\n\ is\ the\ preset\ value\r\n
comment4.params=
comment4.target=void\ testSetSatisfactionThreshold()
comment4.text=\r\n\ test\ if\ the\ satisfication\ thresold\ value\ will\ change\ to\ \r\n\ the\ one\ I\ set\r\n
comment5.params=
comment5.target=void\ testGetRedLine()
comment5.text=\r\n\ test\ if\ the\ redLine\ value\ returned\r\n\ is\ the\ preset\ value\r\n
comment6.params=
comment6.target=void\ testSetRedLine()
comment6.text=\r\n\ test\ if\ the\ redLine\ value\ will\ change\ to\ \r\n\ the\ one\ I\ set\r\n
comment7.params=
comment7.target=void\ testPopulate()
comment7.text=\r\n\ test\ if\ two\ different\ kinds\ of\ agents\ are\ correctly\ randomized\r\n\ In\ the\ case,\ I\ just\ test\ if\ the\ blue\ agents\ can\ be\ randomized\ \r\n\ under\ preset\ percentage\ and\ values\r\n\ since\ blue\ and\ orange\ have\ the\ same\ algorithm\r\n\ And\ it\ is\ hard\ to\ directly\ call\ populate\ to\ do\ the\ test,\r\n\ so\ I\ paste\ part\ of\ it\ to\ make\ the\ test\r\n
comment8.params=
comment8.target=void\ testAreSameColor()
comment8.text=\r\n\ Test\ if\ two\ pixels\ have\ the\ same\ color\r\n
comment9.params=
comment9.target=void\ testIsEmpty()
comment9.text=\r\n\ Test\ if\ the\ color\ of\ the\ selected\ pixel\ is\ white\r\n
numComments=19
